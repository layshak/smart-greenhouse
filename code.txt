#include <Wire.h>
#include <Adafruit_TSL2561_U.h>
#include <ESP8266WiFi.h>
#include <WiFiClientSecure.h>
#include <UniversalTelegramBot.h>
#include <ArduinoJson.h>

// --- НАСТРОЙКИ ---
// Укажите данные вашей Wi-Fi сети
const char* ssid = "";
const char* password = "";

// Укажите токен вашего бота и ваш Chat ID
#define BOT_TOKEN ""
#define CHAT_ID ""

// --- ГЛОБАЛЬНЫЕ ПЕРЕМЕННЫЕ ---
WiFiClientSecure client;
UniversalTelegramBot bot(BOT_TOKEN, client);

// --- НАСТРОЙКИ ДАТЧИКА ВЛАЖНОСТИ ---
const int soilMoisturePin = A0;
// <-- ИЗМЕНЕНИЕ: Устанавливаем порог в сырых значениях ADC (0-1023).
// Чем ВЫШЕ значение, тем СУШЕ почва.
// Подберите это значение экспериментально, наблюдая за показаниями в Мониторе порта.
const int SOIL_MOISTURE_THRESHOLD = 700; 

// Переменные для контроля времени
unsigned long lastCheckTime = 0;
const long checkInterval = 60000; // Интервал проверки датчиков (1 минута)
bool notificationSent = false; // Флаг, чтобы не отправлять сообщения постоянно

// Датчик освещенности TSL2561
Adafruit_TSL2561_Unified tsl = Adafruit_TSL2561_Unified(TSL2561_ADDR_FLOAT, 12345);

// --- Функции для датчика освещенности, Wi-Fi и т.д. (без изменений) ---

void displaySensorDetails(void) {
  sensor_t sensor;
  tsl.getSensor(&sensor);
  Serial.println("------------------------------------");
  Serial.print  ("Датчик:           "); Serial.println(sensor.name);
  // ... (остальной код функции без изменений) ...
  Serial.println("------------------------------------");
  Serial.println("");
  delay(500);
}

void configureSensor(void) {
  tsl.enableAutoRange(true);
  tsl.setIntegrationTime(TSL2561_INTEGRATIONTIME_13MS);
  Serial.println("------------------------------------");
  Serial.print  ("Усиление:         "); Serial.println("Auto");
  Serial.print  ("Время интеграции: "); Serial.println("13 ms");
  Serial.println("------------------------------------");
}

void ensureWiFiConnection() {
  if (WiFi.status() != WL_CONNECTED) {
    Serial.println("\nПотеряно соединение с Wi-Fi. Попытка переподключения...");
    WiFi.begin(ssid, password);
    int retries = 0;
    while (WiFi.status() != WL_CONNECTED && retries < 20) {
      delay(500);
      Serial.print(".");
      retries++;
    }
    if (WiFi.status() == WL_CONNECTED) {
      Serial.println("\nWi-Fi переподключен!");
    } else {
      Serial.println("\nНе удалось переподключиться к Wi-Fi. Перезагрузка через 10 секунд...");
      delay(10000);
      ESP.restart();
    }
  }
}

// --- ФУНКЦИЯ SETUP ---
void setup(void) {
  Serial.begin(9600);
  Serial.println("\n\nЗапуск устройства...");
  
  // Инициализация датчика освещенности
  if (!tsl.begin()) {
    Serial.print("Датчик TSL2561 не найден!");
    while (1) { delay(1000); }
  }
  displaySensorDetails();
  configureSensor();

  pinMode(soilMoisturePin, INPUT);

  // Подключаемся к Wi-Fi
  Serial.print("Подключение к Wi-Fi: ");
  Serial.println(ssid);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi подключен!");
  Serial.print("IP адрес: ");
  Serial.println(WiFi.localIP());
  
  delay(1000);
  client.setInsecure();

  // Проверка связи с ботом
  Serial.println("Попытка установить связь с Telegram ботом...");
  if (bot.getMe()) {
    Serial.println("Связь с ботом установлена: " + bot.botName);
  } else {
    Serial.println("Не удалось установить связь с ботом.");
  }

  Serial.println("\nУстройство готово к работе!");
  Serial.println("Порог срабатывания по влажности (raw): " + String(SOIL_MOISTURE_THRESHOLD));
  Serial.println("");
}

// --- ГЛАВНЫЙ ЦИКЛ LOOP ---
void loop(void) {
  // Проверяем и восстанавливаем соединение с Wi-Fi
  ensureWiFiConnection();

  unsigned long currentMillis = millis();

  // Проверяем датчики раз в `checkInterval`
  if (currentMillis - lastCheckTime >= checkInterval) {
    lastCheckTime = currentMillis;

    // --- ЛОГИКА ДАТЧИКА ВЛАЖНОСТИ (ИЗМЕНЕНО) ---
    int soilValue = analogRead(soilMoisturePin);
    Serial.print("Текущее значение влажности (raw): ");
    Serial.println(soilValue);

    // Сравниваем сырое значение с порогом
    if (soilValue > SOIL_MOISTURE_THRESHOLD) {
      // Если почва сухая и уведомление еще не было отправлено
      if (!notificationSent) {
        String message = "Внимание! Почва слишком сухая. \nТекущее значение: " + String(soilValue) + "\nПорог: " + String(SOIL_MOISTURE_THRESHOLD);
        bot.sendMessage(CHAT_ID, message, "");
        Serial.println("ОТПРАВЛЕНО УВЕДОМЛЕНИЕ О СУХОЙ ПОЧВЕ");
        notificationSent = true; // Устанавливаем флаг, чтобы не спамить
      }
    } else {
      // Если влажность в норме, сбрасываем флаг
      if (notificationSent) {
         Serial.println("Влажность в норме, можно будет снова отправлять уведомление.");
         notificationSent = false;
      }
    }

    // --- ЛОГИКА ДАТЧИКА ОСВЕЩЕННОСТИ ---
    sensors_event_t event;
    tsl.getEvent(&event);

    if (event.light) {
      Serial.print("Освещенность: "); 
      Serial.print(event.light);
      Serial.println(" lux");
      // Если хотите получать сообщения об освещенности, раскомментируйте строку ниже
      // bot.sendMessage(CHAT_ID, "Текущая освещенность: " + String(event.light) + " lux", "");
    } else {
      Serial.println("Ошибка чтения датчика освещенности");
    }
     Serial.println("--- Конец проверки ---");
  }
}
